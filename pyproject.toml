[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "headsetcontrol_tray"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "hid>=1.0.7",
    "hidapi>=0.14.0.post4",
    "pyside6>=6.9.0",
    "shiboken6>=6.9.0",
    "verboselogs>=1.7",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.16.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.10.0",
    "ruff>=0.11.13",
    "radon>=6.0.1",
    "vulture>=2.11",
    "pytest-qt>=4.0.0",
]

[tool.ruff]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # Pyflakes
    "W",  # pycodestyle warnings
    "C90", # mccabe complexity
    "I",  # isort
    "N",  # pep8-naming
    "D",  # pydocstyle
    "UP", # pyupgrade
    "ANN", # flake8-annotations
    "S",  # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM", # flake8-commas
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G",  # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PLC", # Pylint Convention
    "PLE", # Pylint Error
    "PLR", # Pylint Refactor
    "PLW", # Pylint Warning
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy specific rules
    "PERF", # Perflint
    "FURB", # refurb
    "LOG", # flake8-logging
    "RUF", # Ruff-specific rules
]
ignore = ["ANN401", "D203", "D212", "D415"] # Ignore some specific rules for now

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["headsetcontrol_tray", "tests"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**/*.py" = ["S101"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["headsetcontrol_tray*"]
namespaces = false

[tool.setuptools.package-dir]
"" = "src"
